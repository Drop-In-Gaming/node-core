{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_soy.3789d376.chunk.js","mappings":"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","sources":["../../../node_modules/refractor/lang/markup-templating.js","../../../node_modules/refractor/lang/soy.js"],"sourcesContent":["'use strict'\n\nmodule.exports = markupTemplating\nmarkupTemplating.displayName = 'markupTemplating'\nmarkupTemplating.aliases = []\nfunction markupTemplating(Prism) {\n  ;(function(Prism) {\n    /**\n     * Returns the placeholder for the given language id and index.\n     *\n     * @param {string} language\n     * @param {string|number} index\n     * @returns {string}\n     */\n    function getPlaceholder(language, index) {\n      return '___' + language.toUpperCase() + index + '___'\n    }\n    Object.defineProperties((Prism.languages['markup-templating'] = {}), {\n      buildPlaceholders: {\n        /**\n         * Tokenize all inline templating expressions matching `placeholderPattern`.\n         *\n         * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n         * `true` will be replaced.\n         *\n         * @param {object} env The environment of the `before-tokenize` hook.\n         * @param {string} language The language id.\n         * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n         * @param {(match: string) => boolean} [replaceFilter]\n         */\n        value: function(env, language, placeholderPattern, replaceFilter) {\n          if (env.language !== language) {\n            return\n          }\n          var tokenStack = (env.tokenStack = [])\n          env.code = env.code.replace(placeholderPattern, function(match) {\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n              return match\n            }\n            var i = tokenStack.length\n            var placeholder // Check for existing strings\n            while (\n              env.code.indexOf((placeholder = getPlaceholder(language, i))) !==\n              -1\n            )\n              ++i // Create a sparse array\n            tokenStack[i] = match\n            return placeholder\n          }) // Switch the grammar to markup\n          env.grammar = Prism.languages.markup\n        }\n      },\n      tokenizePlaceholders: {\n        /**\n         * Replace placeholders with proper tokens after tokenizing.\n         *\n         * @param {object} env The environment of the `after-tokenize` hook.\n         * @param {string} language The language id.\n         */\n        value: function(env, language) {\n          if (env.language !== language || !env.tokenStack) {\n            return\n          } // Switch the grammar back\n          env.grammar = Prism.languages[language]\n          var j = 0\n          var keys = Object.keys(env.tokenStack)\n          function walkTokens(tokens) {\n            for (var i = 0; i < tokens.length; i++) {\n              // all placeholders are replaced already\n              if (j >= keys.length) {\n                break\n              }\n              var token = tokens[i]\n              if (\n                typeof token === 'string' ||\n                (token.content && typeof token.content === 'string')\n              ) {\n                var k = keys[j]\n                var t = env.tokenStack[k]\n                var s = typeof token === 'string' ? token : token.content\n                var placeholder = getPlaceholder(language, k)\n                var index = s.indexOf(placeholder)\n                if (index > -1) {\n                  ++j\n                  var before = s.substring(0, index)\n                  var middle = new Prism.Token(\n                    language,\n                    Prism.tokenize(t, env.grammar),\n                    'language-' + language,\n                    t\n                  )\n                  var after = s.substring(index + placeholder.length)\n                  var replacement = []\n                  if (before) {\n                    replacement.push.apply(replacement, walkTokens([before]))\n                  }\n                  replacement.push(middle)\n                  if (after) {\n                    replacement.push.apply(replacement, walkTokens([after]))\n                  }\n                  if (typeof token === 'string') {\n                    tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                  } else {\n                    token.content = replacement\n                  }\n                }\n              } else if (\n                token.content\n                /* && typeof token.content !== 'string' */\n              ) {\n                walkTokens(token.content)\n              }\n            }\n            return tokens\n          }\n          walkTokens(env.tokens)\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = soy\nsoy.displayName = 'soy'\nsoy.aliases = []\nfunction soy(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function(Prism) {\n    var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/\n    Prism.languages.soy = {\n      comment: [\n        /\\/\\*[\\s\\S]*?\\*\\//,\n        {\n          pattern: /(\\s)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'command-arg': {\n        pattern: /({+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      parameter: {\n        pattern: /({+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      keyword: [\n        {\n          pattern: /({+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n          lookbehind: true\n        },\n        /\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/\n      ],\n      delimiter: {\n        pattern: /^{+\\/?|\\/?}+$/,\n        alias: 'punctuation'\n      },\n      property: /\\w+(?==)/,\n      variable: {\n        pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+]))*/,\n        inside: {\n          string: {\n            pattern: stringPattern,\n            greedy: true\n          },\n          number: numberPattern,\n          punctuation: /[\\[\\].?]/\n        }\n      },\n      string: {\n        pattern: stringPattern,\n        greedy: true\n      },\n      function: [\n        /\\w+(?=\\()/,\n        {\n          pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n          lookbehind: true\n        }\n      ],\n      boolean: /\\b(?:true|false)\\b/,\n      number: numberPattern,\n      operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n      punctuation: /[{}()\\[\\]|.,:]/\n    } // Tokenize all inline Soy expressions\n    Prism.hooks.add('before-tokenize', function(env) {\n      var soyPattern = /{{.+?}}|{.+?}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g\n      var soyLitteralStart = '{literal}'\n      var soyLitteralEnd = '{/literal}'\n      var soyLitteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'soy',\n        soyPattern,\n        function(match) {\n          // Soy tags inside {literal} block are ignored\n          if (match === soyLitteralEnd) {\n            soyLitteralMode = false\n          }\n          if (!soyLitteralMode) {\n            if (match === soyLitteralStart) {\n              soyLitteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    }) // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function(env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'soy')\n    })\n  })(Prism)\n}\n"],"names":["markupTemplating","Prism","getPlaceholder","language","index","toUpperCase","Object","defineProperties","languages","buildPlaceholders","value","env","placeholderPattern","replaceFilter","tokenStack","code","replace","match","placeholder","i","length","indexOf","grammar","markup","tokenizePlaceholders","j","keys","walkTokens","tokens","token","content","k","t","s","before","substring","middle","Token","tokenize","after","replacement","push","apply","splice","concat","module","exports","displayName","aliases","refractorMarkupTemplating","require","soy","register","stringPattern","numberPattern","comment","pattern","lookbehind","greedy","alias","inside","punctuation","parameter","keyword","delimiter","property","variable","string","number","function","boolean","operator","hooks","add","soyLitteralMode","c","m","f","a","o","p","u","n","r","y","d","l","h","g","v","b","T","e"],"sourceRoot":""}