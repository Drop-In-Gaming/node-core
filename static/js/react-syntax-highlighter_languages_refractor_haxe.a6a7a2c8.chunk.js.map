{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_haxe.a6a7a2c8.chunk.js","mappings":"sGAKA,SAASA,EAAKC,GACZA,EAAMC,UAAUF,KAAOC,EAAMC,UAAUC,OAAO,QAAS,CAErDC,OAAQ,CACNC,QAAS,oCACTC,QAAQ,EACRC,OAAQ,CACNC,cAAe,CACbH,QAAS,+BACTI,YAAY,EACZF,OAAQ,CACNC,cAAe,CACbH,QAAS,SACTK,MAAO,gBAOjBC,QAAS,wRACTC,SAAU,+DAEZX,EAAMC,UAAUW,aAAa,OAAQ,aAAc,CACjDC,MAAO,CACLT,QAAS,oCACTC,QAAQ,KAGZL,EAAMC,UAAUW,aAAa,OAAQ,UAAW,CAC9CE,aAAc,CACZV,QAAS,OACTK,MAAO,WAETM,SAAU,CACRX,QAAS,SACTK,MAAO,UAETO,YAAa,CACXZ,QAAS,mBACTK,MAAO,cAGXT,EAAMC,UAAUF,KAAa,OAAEO,OAAsB,cAAEA,OAAOW,KAC5DjB,EAAMC,UAAUF,YACXC,EAAMC,UAAUF,KAAK,aAC9B,CAjDAmB,EAAOC,QAAUpB,EACjBA,EAAKqB,YAAc,OACnBrB,EAAKsB,QAAU,E,0fACf,SAASC,EAAKC,GACZA,EAAMtB,UAAUF,KAAOwB,EAAMtB,UAAUC,OAAO,QAAS,CAErDC,OAAQ,CACNC,QAAS,oCACTC,QAAQ,EACRC,OAAQ,CACNC,cAAe,CACbH,QAAS,+BACTI,YAAY,EACZF,OAAQ,CACNC,cAAe,CACbH,QAAS,SACTK,MAAO,gBAOjBC,QAAS,wRACTC,SAAU,+DAEZY,EAAMtB,UAAUW,aAAa,OAAQ,aAAc,CACjDC,MAAO,CACLT,QAAS,oCACTC,QAAQ,KAGZkB,EAAMtB,UAAUW,aAAa,OAAQ,UAAW,CAC9CE,aAAc,CACZV,QAAS,OACTK,MAAO,WAETM,SAAU,CACRX,QAAS,SACTK,MAAO,UAETO,YAAa,CACXZ,QAAS,mBACTK,MAAO,cAGXc,EAAMtB,UAAUF,KAAKI,OAAUG,OAAOC,cAAiBD,OAAOW,KAC5DM,EAAMtB,UAAUF,YACXwB,EAAMtB,UAAUF,KAAK,aAC9B,C,WAjDAyB,EAAiBF,EACjBA,EAAKF,YAAc,OACnBE,EAAKD,QAAU,G","sources":["../../../node_modules/refractor/lang/haxe.js"],"sourcesContent":["'use strict'\n\nmodule.exports = haxe\nhaxe.displayName = 'haxe'\nhaxe.aliases = []\nfunction haxe(Prism) {\n  Prism.languages.haxe = Prism.languages.extend('clike', {\n    // Strings can be multi-line\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,\n          lookbehind: true,\n          inside: {\n            interpolation: {\n              pattern: /^\\$\\w*/,\n              alias: 'variable'\n            } // See rest below\n          }\n        }\n      }\n    },\n    // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n    keyword: /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|from|for|function|if|implements|import|in|inline|interface|macro|new|null|override|public|private|return|static|super|switch|throw|to|try|typedef|using|var|while)(?!\\.)\\b/,\n    operator: /\\.{3}|\\+\\+?|-[->]?|[=!]=?|&&?|\\|\\|?|<[<=]?|>[>=]?|[*\\/%~^]/\n  })\n  Prism.languages.insertBefore('haxe', 'class-name', {\n    regex: {\n      pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[igmsu]*/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('haxe', 'keyword', {\n    preprocessor: {\n      pattern: /#\\w+/,\n      alias: 'builtin'\n    },\n    metadata: {\n      pattern: /@:?\\w+/,\n      alias: 'symbol'\n    },\n    reification: {\n      pattern: /\\$(?:\\w+|(?=\\{))/,\n      alias: 'variable'\n    }\n  })\n  Prism.languages.haxe['string'].inside['interpolation'].inside.rest =\n    Prism.languages.haxe\n  delete Prism.languages.haxe['class-name']\n}\n"],"names":["haxe","Prism","languages","extend","string","pattern","greedy","inside","interpolation","lookbehind","alias","keyword","operator","insertBefore","regex","preprocessor","metadata","reification","rest","module","exports","displayName","aliases","a","e","o"],"sourceRoot":""}