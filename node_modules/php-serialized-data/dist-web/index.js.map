{"version":3,"file":"index.js","sources":["../dist-src/parse.js"],"sourcesContent":["let objectReferences;\r\nlet parseOptions = {};\r\nexport function parse(input, options = {}) {\r\n    objectReferences = [null];\r\n    parseOptions = options;\r\n    return _parse(input);\r\n}\r\nfunction _parse(input) {\r\n    if (typeof input !== 'string') {\r\n        throw new TypeError('Input must be a string');\r\n    }\r\n    input = input.trim();\r\n    const tokenIdentifier = input.substr(0, 1);\r\n    if (tokenIdentifier in PHPTypes.identifierMap) {\r\n        return PHPTypes.identifierMap[tokenIdentifier].build(input);\r\n    }\r\n    else {\r\n        throw new Error(`Failed to match identifier \"${tokenIdentifier}\".`);\r\n    }\r\n}\r\nexport function toJs(object, options = {}, seen = new WeakMap()) {\r\n    if (!object || typeof object !== 'object')\r\n        return object;\r\n    const objectClass = object.constructor;\r\n    if (!Object.values(PHPTypes.identifierMap).includes(objectClass)) {\r\n        return object;\r\n    }\r\n    if (object instanceof PHPTypes.PHPReference) {\r\n        object = object.value;\r\n    }\r\n    if (seen.has(object)) {\r\n        return seen.get(object);\r\n    }\r\n    const jsValue = objectClass.toJs(object, options);\r\n    seen.set(object, jsValue);\r\n    if (object instanceof PHPTypes.PHPArray || object instanceof PHPTypes.PHPObject) {\r\n        const objectValue = jsValue;\r\n        for (let [key, value] of Object.entries(objectValue)) {\r\n            jsValue[key] = toJs(value, options, seen);\r\n        }\r\n    }\r\n    return jsValue;\r\n}\r\nexport function parseFixedLengthString(input, openingDelimiter = '\"', closingDelimiter = '\"') {\r\n    const byteCountRegex = /(\\d+):/;\r\n    const byteCountMatches = input.match(byteCountRegex);\r\n    if (byteCountMatches !== null) {\r\n        let offset = byteCountMatches[0].length;\r\n        const byteCount = parseInt(byteCountMatches[1]);\r\n        if (input.substr(offset, openingDelimiter.length) === openingDelimiter) {\r\n            offset += openingDelimiter.length;\r\n        }\r\n        else {\r\n            throw new Error('Failed to parse fixed-length string');\r\n        }\r\n        // We need to read bytes manually so the lengths match up with PHP.\r\n        const encoder = new TextEncoder();\r\n        const decoder = new TextDecoder();\r\n        const allBytes = encoder.encode(input.substr(offset));\r\n        const valueBytes = allBytes.slice(0, byteCount);\r\n        const value = decoder.decode(valueBytes);\r\n        offset += value.length;\r\n        if (input.substr(offset, closingDelimiter.length) === closingDelimiter) {\r\n            offset += closingDelimiter.length;\r\n        }\r\n        else {\r\n            if (parseOptions.fixNulls) {\r\n                // Let's see what we can do about this\r\n                // Maybe the nulls have been converted into a replacement character.\r\n                // This is the easiest to fix.\r\n                if (value.substr(0, 1) === '\\ufffd') {\r\n                    input = input.replace(/\\ufffd/g, '\\u0000');\r\n                    return parseFixedLengthString(input, openingDelimiter, closingDelimiter);\r\n                }\r\n                // Maybe the nulls are missing, and we overshot the end of the string.\r\n                let nullCount;\r\n                const valueStart = byteCountMatches[0].length + openingDelimiter.length;\r\n                // Check for lambdas. String should have ended one byte early, and the value should start with \"lambda_\".\r\n                nullCount = 1;\r\n                if (decoder.decode(allBytes.slice(byteCount - nullCount, byteCount - nullCount + closingDelimiter.length + 1)) === closingDelimiter + ';'\r\n                    && /^lambda_\\d+$/.test(value.substr(0, value.length - nullCount))) {\r\n                    input = input.substr(0, valueStart) + '\\u0000' + input.substr(valueStart);\r\n                    let [value] = parseFixedLengthString(input, openingDelimiter, closingDelimiter);\r\n                    return [value, offset - nullCount + closingDelimiter.length]; // Original offset to keep everything matched up\r\n                }\r\n                // Check for protected properties with a leading asterisk. String should have ended two bytes early.\r\n                nullCount = 2;\r\n                if (decoder.decode(allBytes.slice(byteCount - nullCount, byteCount - nullCount + closingDelimiter.length + 1)) === closingDelimiter + ';'\r\n                    && value.substr(0, 1) === '*') {\r\n                    input = input.replace('*', '\\u0000*\\u0000');\r\n                    let [value] = parseFixedLengthString(input, openingDelimiter, closingDelimiter);\r\n                    return [value, offset - nullCount + closingDelimiter.length]; // Original offset to keep everything matched up\r\n                }\r\n                // Check for private properties. String should have ended two bytes early.\r\n                nullCount = 2;\r\n                if (decoder.decode(allBytes.slice(byteCount - nullCount, byteCount - nullCount + closingDelimiter.length + 1)) === closingDelimiter + ';') {\r\n                    // Can't determine the class name from here.\r\n                    // Just prefix with two nulls and check in the toJS method.\r\n                    input = input.substr(0, valueStart) + '\\u0000\\u0000' + input.substr(valueStart);\r\n                    let [value] = parseFixedLengthString(input, openingDelimiter, closingDelimiter);\r\n                    return [value, offset - nullCount + closingDelimiter.length]; // Original offset to keep everything matched up\r\n                }\r\n            }\r\n            else {\r\n                throw new Error('Failed to parse fixed-length string');\r\n            }\r\n        }\r\n        return [value, offset];\r\n    }\r\n    else {\r\n        throw new Error('Failed to parse fixed-length string');\r\n    }\r\n}\r\nexport function makeRegExpClass(regex, valueParser) {\r\n    return class RegExpClass {\r\n        constructor(length, value) {\r\n            this.length = length;\r\n            this.value = value;\r\n            objectReferences.push(this);\r\n        }\r\n        static build(input) {\r\n            const matches = input.match(regex);\r\n            if (matches !== null) {\r\n                const value = valueParser(matches[1]);\r\n                return new this(matches[0].length, value);\r\n            }\r\n            else {\r\n                throw new Error('Failed to parse ' + this.name);\r\n            }\r\n        }\r\n        toJs() {\r\n            return RegExpClass.toJs(this);\r\n        }\r\n        static toJs(instance) {\r\n            return instance.value;\r\n        }\r\n    };\r\n}\r\nexport var PHPTypes;\r\n(function (PHPTypes) {\r\n    class PHPReference {\r\n        constructor(length, value) {\r\n            this.length = length;\r\n            this.value = value;\r\n        }\r\n        static build(input) {\r\n            const matches = input.match(this.regex);\r\n            if (matches !== null) {\r\n                const value = parseInt(matches[1]);\r\n                if (!(value in objectReferences)) {\r\n                    throw new Error('Invalid Reference');\r\n                }\r\n                const object = objectReferences[value];\r\n                if (object instanceof PHPReference) {\r\n                    throw new Error('Invalid Reference');\r\n                }\r\n                return new this(matches[0].length, object);\r\n            }\r\n            else {\r\n                throw new Error('Failed to parse PHPReference');\r\n            }\r\n        }\r\n        toJs(options = {}) {\r\n            return PHPReference.toJs(this, options);\r\n        }\r\n        static toJs(instance, options = {}) {\r\n            return toJs(instance.value, options);\r\n        }\r\n    }\r\n    PHPReference.regex = /^[Rr]:([^;]+);/;\r\n    PHPTypes.PHPReference = PHPReference;\r\n    class PHPBoolean extends makeRegExpClass(/^b:([01]);/, input => Boolean(parseInt(input))) {\r\n    }\r\n    PHPTypes.PHPBoolean = PHPBoolean;\r\n    class PHPFloat extends makeRegExpClass(/^d:([^;]+);/, input => parseFloat(input.replace('INF', 'Infinity'))) {\r\n    }\r\n    PHPTypes.PHPFloat = PHPFloat;\r\n    class PHPInteger extends makeRegExpClass(/^i:([^;]+);/, input => parseInt(input)) {\r\n    }\r\n    PHPTypes.PHPInteger = PHPInteger;\r\n    class PHPNull extends makeRegExpClass(/^N;/, input => null) {\r\n        constructor() {\r\n            super(2, null);\r\n        }\r\n    }\r\n    PHPTypes.PHPNull = PHPNull;\r\n    class PHPCustomObject {\r\n        constructor(length, value, className) {\r\n            this.length = length;\r\n            this.value = value;\r\n            this.className = className;\r\n            objectReferences.push(this);\r\n        }\r\n        static build(input) {\r\n            const matches = input.match(this.regex);\r\n            if (matches !== null) {\r\n                let offset = matches[0].length;\r\n                const [className, classNameLength] = parseFixedLengthString(input.substr(offset));\r\n                offset += classNameLength;\r\n                if (input.substr(offset, 1) === ':') {\r\n                    offset += 1;\r\n                }\r\n                else {\r\n                    throw new Error('Failed to parse ' + this.name);\r\n                }\r\n                let [value, valueLength] = parseFixedLengthString(input.substr(offset), '{', '}');\r\n                offset += valueLength;\r\n                return new this(offset, value, className);\r\n            }\r\n            else {\r\n                throw new Error('Failed to parse ' + this.name);\r\n            }\r\n        }\r\n        toJs() {\r\n            return toJs(this);\r\n        }\r\n        static toJs(instance) {\r\n            return instance.value;\r\n        }\r\n    }\r\n    PHPCustomObject.regex = /^C:/;\r\n    PHPTypes.PHPCustomObject = PHPCustomObject;\r\n    class MappedData {\r\n        static parseMap(input, openingDelimiter = '{', closingDelimiter = '}') {\r\n            const countMatches = input.match(this.mapRegex);\r\n            if (countMatches !== null) {\r\n                const count = parseInt(countMatches[1]);\r\n                let offset = countMatches[0].length;\r\n                if (input.substr(offset, openingDelimiter.length) === openingDelimiter) {\r\n                    offset += openingDelimiter.length;\r\n                }\r\n                else {\r\n                    throw new Error('Failed to parse ' + this.name);\r\n                }\r\n                const map = new Map();\r\n                for (let i = 0; i < count; i++) {\r\n                    const key = _parse(input.substr(offset));\r\n                    offset += key.length;\r\n                    // Keys cannot be referenced\r\n                    objectReferences.pop();\r\n                    const value = _parse(input.substr(offset));\r\n                    offset += value.length;\r\n                    map.set(key, value);\r\n                }\r\n                if (input.substr(offset, closingDelimiter.length) === closingDelimiter) {\r\n                    offset += closingDelimiter.length;\r\n                }\r\n                else {\r\n                    throw new Error('Failed to parse ' + this.name);\r\n                }\r\n                return [map, offset];\r\n            }\r\n            else {\r\n                throw new Error('Failed to parse ' + this.name);\r\n            }\r\n        }\r\n    }\r\n    MappedData.mapRegex = /(\\d+):/;\r\n    PHPTypes.MappedData = MappedData;\r\n    class PHPObject extends MappedData {\r\n        constructor(length, value, className) {\r\n            super();\r\n            this.length = length;\r\n            this.value = value;\r\n            this.className = className;\r\n            this.jsValue = {};\r\n            objectReferences.push(this);\r\n        }\r\n        static build(input) {\r\n            const matches = input.match(this.regex);\r\n            if (matches !== null) {\r\n                let offset = matches[0].length;\r\n                const [className, classNameLength] = parseFixedLengthString(input.substr(offset));\r\n                offset += classNameLength;\r\n                if (input.substr(offset, 1) === ':') {\r\n                    offset += 1;\r\n                }\r\n                else {\r\n                    throw new Error('Failed to parse ' + this.name);\r\n                }\r\n                const instance = new this(offset, new Map(), className);\r\n                const [map, valueLength] = this.parseMap(input.substr(offset));\r\n                offset += valueLength;\r\n                instance.length = offset;\r\n                instance.value = map;\r\n                return instance;\r\n            }\r\n            else {\r\n                throw new Error('Failed to parse ' + this.name);\r\n            }\r\n        }\r\n        toJs(options = {}) {\r\n            return toJs(this, options);\r\n        }\r\n        static propertyInfo(propertyName, className) {\r\n            let accessModifier = 'public';\r\n            const protectedRegExp = /^\\u0000\\*\\u0000/;\r\n            // Also handle double nulls caused by fixing missing nulls\r\n            const privateRegExp = new RegExp(`^\\u0000(\\u0000${className}|${className}\\u0000)`);\r\n            if (propertyName.charCodeAt(0) === 0) {\r\n                if (protectedRegExp.test(propertyName)) {\r\n                    propertyName = propertyName.replace(protectedRegExp, '');\r\n                    accessModifier = 'protected';\r\n                }\r\n                else if (privateRegExp.test(propertyName)) {\r\n                    propertyName = propertyName.replace(privateRegExp, '');\r\n                    accessModifier = 'private';\r\n                }\r\n            }\r\n            return { accessModifier, propertyName };\r\n        }\r\n        static toJs(instance, options = {}) {\r\n            const optionsHash = JSON.stringify(options);\r\n            const cached = instance.jsValue[optionsHash];\r\n            if (cached) {\r\n                return cached;\r\n            }\r\n            const output = {};\r\n            for (const [PHPKey, PHPValue] of instance.value.entries()) {\r\n                let key = PHPKey.toJs();\r\n                if (typeof key === 'string') {\r\n                    let { accessModifier, propertyName } = this.propertyInfo(key, instance.className);\r\n                    key = propertyName;\r\n                    if (accessModifier !== 'public' && !options.private) {\r\n                        continue;\r\n                    }\r\n                }\r\n                output[key] = PHPValue;\r\n            }\r\n            instance.jsValue[optionsHash] = output;\r\n            return output;\r\n        }\r\n    }\r\n    PHPObject.regex = /^O:/;\r\n    PHPTypes.PHPObject = PHPObject;\r\n    class PHPArray extends MappedData {\r\n        constructor(length, value) {\r\n            super();\r\n            this.length = length;\r\n            this.value = value;\r\n            this.jsValue = {};\r\n            objectReferences.push(this);\r\n        }\r\n        static build(input) {\r\n            const matches = input.match(this.regex);\r\n            if (matches !== null) {\r\n                let offset = matches[0].length;\r\n                const instance = new this(offset, new Map());\r\n                const [map, mapLength] = this.parseMap(input.substr(offset));\r\n                offset += mapLength;\r\n                instance.length = offset;\r\n                instance.value = map;\r\n                return instance;\r\n            }\r\n            else {\r\n                throw new Error('Failed to parse ' + this.name);\r\n            }\r\n        }\r\n        toJs(options = {}) {\r\n            return toJs(this, options);\r\n        }\r\n        static toJs(instance, options = {}) {\r\n            const optionsHash = JSON.stringify(options);\r\n            const cached = instance.jsValue[optionsHash];\r\n            if (cached) {\r\n                return cached;\r\n            }\r\n            // Borrow the toJs method from PHPObject, then attempt to convert the result to an array.\r\n            const outputObject = PHPObject.toJs(instance, options);\r\n            if (options.detectArrays) {\r\n                const outputArray = [];\r\n                const stringKeys = Object.keys(outputObject);\r\n                const numberKeys = [];\r\n                if (stringKeys.length === 0)\r\n                    return [];\r\n                const allKeysAreNumbers = stringKeys.every(stringKey => {\r\n                    const numberKey = parseInt(stringKey);\r\n                    numberKeys.push(numberKey);\r\n                    return numberKey.toString() === stringKey;\r\n                });\r\n                if (allKeysAreNumbers) {\r\n                    for (const numberKey of numberKeys) {\r\n                        outputArray[numberKey] = outputObject[numberKey];\r\n                    }\r\n                    instance.jsValue[optionsHash] = outputArray;\r\n                    return outputArray;\r\n                }\r\n            }\r\n            instance.jsValue[optionsHash] = outputObject;\r\n            return outputObject;\r\n        }\r\n    }\r\n    PHPArray.regex = /^a:/;\r\n    PHPTypes.PHPArray = PHPArray;\r\n    class PHPString {\r\n        constructor(length, value) {\r\n            this.length = length;\r\n            this.value = value;\r\n            objectReferences.push(this);\r\n        }\r\n        static build(input) {\r\n            const matches = input.match(this.regex);\r\n            if (matches !== null) {\r\n                let offset = matches[0].length;\r\n                let [value, valueLength] = parseFixedLengthString(input.substr(offset));\r\n                offset += valueLength;\r\n                if (input.substr(offset, 1) === ';') {\r\n                    offset += 1;\r\n                }\r\n                else {\r\n                    throw new Error('Failed to parse ' + this.name);\r\n                }\r\n                return new this(offset, value);\r\n            }\r\n            else {\r\n                throw new Error('Failed to parse ' + this.name);\r\n            }\r\n        }\r\n        toJs() {\r\n            return PHPString.toJs(this);\r\n        }\r\n        static toJs(instance) {\r\n            // Remove nulls from lambdas\r\n            if (/^\\u0000lambda_\\d+$/.test(instance.value)) {\r\n                return instance.value.replace(/\\u0000/g, '');\r\n            }\r\n            return instance.value;\r\n        }\r\n    }\r\n    PHPString.regex = /^s:/;\r\n    PHPTypes.PHPString = PHPString;\r\n    function createIdentifierMap(map) {\r\n        return map;\r\n    }\r\n    PHPTypes.identifierMap = createIdentifierMap({\r\n        C: PHPCustomObject,\r\n        N: PHPNull,\r\n        O: PHPObject,\r\n        R: PHPReference,\r\n        S: PHPString,\r\n        a: PHPArray,\r\n        b: PHPBoolean,\r\n        d: PHPFloat,\r\n        i: PHPInteger,\r\n        r: PHPReference,\r\n        s: PHPString,\r\n    });\r\n})(PHPTypes || (PHPTypes = {}));\r\n"],"names":[],"mappings":"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"}